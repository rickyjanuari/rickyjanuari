import{S as ql,i as Fl,s as zl,e as n,t as o,k as u,c as i,a as l,h as s,d as t,m as h,b as c,a1 as ze,g as p,H as a,I as Kn}from"./vendor-b62d7b9b.js";/* empty css                                               */function Ll(Pl){let k,eo,Q,to,ao,Yt,he,oo,Ut,ce,so,Vt,de,fe,Qn,Jt,X,Le,no,io,Kt,A,D,Be,lo,Qt,_,ro,Ye,po,uo,Z,ho,co,Xt,$,xl=`<code class="language-php"><span class="token comment">//functions.php </span>
 
<span class="token function">add_theme_support</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'align-wide'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Zt,we,fo,$t,me,ve,Xn,ea,f,wo,Ue,mo,vo,Ve,yo,go,Je,bo,Eo,Ke,ko,_o,ta,ee,Qe,So,Po,aa,G,xo,Xe,Co,Io,oa,j,M,Ze,Oo,sa,ye,To,na,te,Cl=`<code class="language-css"><span class="token comment">/* style.css */</span>
 
<span class="token selector">.alignfull</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50vw<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,ia,ge,Ao,la,w,Do,$e,Go,jo,et,Mo,Wo,tt,Ho,No,at,Ro,qo,ra,W,Fo,ot,zo,Lo,pa,be,Ee,Zn,ua,H,Bo,st,Yo,Uo,ha,ae,Il='<code class="language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50vw<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',ca,S,Vo,nt,Jo,Ko,it,Qo,Xo,da,v,Zo,lt,$o,es,rt,ts,as,pt,os,ss,fa,P,ns,ut,is,ls,ht,rs,ps,wa,oe,ct,us,hs,ma,y,cs,dt,ds,fs,ft,ws,ms,wt,vs,ys,va,ke,_e,$n,ya,Se,gs,ga,E,bs,mt,Es,ks,vt,_s,Ss,yt,Ps,ba,g,xs,gt,Cs,Is,bt,Os,Ts,Et,As,Ds,Ea,Pe,xe,ei,ka,N,R,kt,Gs,_a,Ce,js,Sa,se,Ol=`<code class="language-css"><span class="token selector">.alignfull</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50vw<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Pa,x,Ms,_t,Ws,Hs,St,Ns,Rs,xa,q,qs,Pt,Fs,zs,Ca,ne,Tl='<code class="language-css"><span class="token property">margin</span><span class="token punctuation">:</span> 2rem <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50vw<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',Ia,Ie,Ls,Oa,d,Bs,xt,Ys,Us,Ct,Vs,Js,It,Ks,Qs,Ot,Xs,Zs,Tt,$s,en,At,tn,an,Ta,C,on,Dt,sn,nn,Gt,ln,rn,Aa,F,z,jt,pn,Da,L,un,Mt,hn,cn,Ga,Oe,dn,ja,ie,Al=`<code class="language-css"><span class="token selector">.alignwide</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% + 20vw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> -10vw<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Ma,Te,Ae,ti,Wa,De,fn,Ha,I,wn,Wt,mn,vn,Ht,yn,gn,Na,le,bn,Nt,En,Ra,Ge,kn,qa,je,_n,Fa,Me,Sn,za,B,Pn,Rt,xn,Cn,La,b,In,qt,On,Tn,Ft,An,Dn,zt,Gn,jn,Ba,Y,Mn,Lt,Wn,Hn,Ya,re,Dl=`<code class="language-css"><span class="token comment">/* style.css */</span>
 
<span class="token selector">.alignwide</span> <span class="token punctuation">&#123;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 2rem <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50vw<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
 
<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 960px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>
  <span class="token selector">.alignwide</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% + 20vw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 2rem -10vw<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Ua,pe,Bt,Nn,Rn;return{c(){k=n("p"),eo=o("Recently, I\u2019ve been using (and loving) the new "),Q=n("a"),to=o("Gutenberg editor"),ao=o(" in WordPress 5.0+. It\u2019s a huge step forward in both what developers can offer, and what users can expect out of their content creation experience."),Yt=u(),he=n("p"),oo=o("One of the new features of Gutenberg that I particularly enjoy is the ability to set an image as either \u201Cwide width\u201D or \u201Cfull width,\u201D to allow it to break out of its container element in order to span a greater width of the screen."),Ut=u(),ce=n("p"),so=o("Here\u2019s a visual example of what I mean:"),Vt=u(),de=n("p"),fe=n("img"),Jt=u(),X=n("p"),Le=n("strong"),no=o("Ordinarily, an image would be constrained to the content width"),io=o(" (visualized by the dotted lines in the image above). Being able to allow images to break out of those confines is a powerful layout tool, though, as it allows content authors to add a great deal of visual interest and hierarchy to any page, post, or content supported by the new Gutenberg editor!"),Kt=u(),A=n("h2"),D=n("a"),Be=n("span"),lo=o("Adding Theme Support"),Qt=u(),_=n("p"),ro=o("Adding support for wide- and full-width images is up to the theme developer. Fortunately, from the backend, it\u2019s dead simple; just add this line to the theme\u2019s "),Ye=n("code"),po=o("functions.php"),uo=o(" file (please be sure to use a "),Z=n("a"),ho=o("child theme"),co=o(" as appropriate):"),Xt=u(),$=n("pre"),Zt=u(),we=n("p"),fo=o("That tidy little snippet will make two new options available for image blocks in the Gutenberg editor, in addition to the usual options: \u201Cwide width\u201D and \u201Cfull width,\u201D highlighted in the image below:"),$t=u(),me=n("p"),ve=n("img"),ea=u(),f=n("p"),wo=o("When the user chooses either of these options, the "),Ue=n("code"),mo=o("<figure>"),vo=o(" element that appears on the front-end of the site (oh yeah\u2014by default, Gutenberg puts images inside "),Ve=n("code"),yo=o("<figure>"),go=o(" elements, so that captions can be added easily. Anyway, that element, i.e., the image\u2019s container) will have either an "),Je=n("code"),bo=o("alignwide"),Eo=o(" or "),Ke=n("code"),ko=o("alignfull"),_o=o(" class applied to it (depending, of course, on which was selected by the content author)."),ta=u(),ee=n("p"),Qe=n("strong"),So=o("That\u2019s it for the PHP/back-end setup."),Po=o(" Other than the snippet above, everything we\u2019ve covered so far is fully automatic and just handled by WordPress for us."),aa=u(),G=n("p"),xo=o("However, we still need to actually "),Xe=n("em"),Co=o("implement"),Io=o(" these layout techniques on the front-end of the site, using our theme\u2019s CSS. Otherwise, nothing will happen visually when a content author chooses the full-width or wide-with image option."),oa=u(),j=n("h2"),M=n("a"),Ze=n("span"),Oo=o("Front-End CSS for Full-Width Images"),sa=u(),ye=n("p"),To=o("I wanted to write this post mainly to share one technique that I came across online, which I feel is particularly clever in this situation (and which is not at all exclusive to Gutenberg or WordPress):"),na=u(),te=n("pre"),ia=u(),ge=n("p"),Ao=o("Even though that bit of CSS above is very brief (only two properties!), I still want to be sure we cover what it\u2019s doing, because it\u2019s a pretty elegant solution for our needs."),la=u(),w=n("p"),Do=o("The "),$e=n("code"),Go=o("width"),jo=o(" property is pretty straightforward: a value of "),et=n("code"),Mo=o("100vw"),Wo=o(" ensures that the image is always exactly as wide as the viewport, no matter what size that might be. (Remember, "),tt=n("code"),Ho=o("width: 100%"),No=o(" might not work here, because percentages are based on the width of the "),at=n("em"),Ro=o("parent element"),qo=o(", not the screen, and our image\u2019s parent element may or may not be as wide as the viewport.)"),ra=u(),W=n("p"),Fo=o("However, making the image "),ot=n("code"),zo=o("100vw"),Lo=o(" wide on its own doesn\u2019t do us much good on its own, because it would overflow the screen, as shown in this image:"),pa=u(),be=n("p"),Ee=n("img"),ua=u(),H=n("p"),Bo=o("That brings us to the "),st=n("code"),Yo=o("margin"),Uo=o(" property, which is the clever part. This is where the real CSS magic happens:"),ha=u(),ae=n("pre"),ca=u(),S=n("p"),Vo=o("In case you\u2019re new to the "),nt=n("code"),Jo=o("calc"),Ko=o(" function, in essence, it lets you do math to set CSS values. It\u2019s most commonly used in responsive design to, say, let your image take up a quarter of the available space, minus an 8px margin (which would be "),it=n("code"),Qo=o("width: calc(25% - 8px);"),Xo=o(")."),da=u(),v=n("p"),Zo=o("But "),lt=n("code"),$o=o("calc"),es=o(" has many other uses, and can crunch numbers on any dynamic or static values, even between two different units of measurement (as in the previous example, to subtract "),rt=n("em"),ts=o("pixels"),as=o(" from a "),pt=n("em"),os=o("percentage"),ss=o(")."),fa=u(),P=n("p"),ns=o("Back to our fullwidth image: in order to make the image the full width of the screen and position it properly, we want to set a "),ut=n("em"),is=o("negative margin."),ls=o(" And as you\u2019ve probably guessed, we\u2019ll need "),ht=n("code"),rs=o("calc"),ps=o(" to help us, because the distance between the side of our container and the left edge of the screen is responsive, and always changing."),wa=u(),oe=n("p"),ct=n("strong"),us=o("So how do we determine how far the image needs to shift to the left?"),hs=o(" Answer: we don\u2019t. \u{1F60E}"),ma=u(),y=n("p"),cs=o("Instead, we\u2019re going to send our image "),dt=n("em"),ds=o("halfway to the right."),fs=o(" That\u2019s the "),ft=n("code"),ws=o("50%"),ms=o(" portion of our "),wt=n("code"),vs=o("calc"),ys=o(" formula:"),va=u(),ke=n("p"),_e=n("img"),ya=u(),Se=n("p"),gs=o("Now we can begin to see the full picture (no pun intended)!"),ga=u(),E=n("p"),bs=o("Since percentage values are calculated based on the parent element\u2019s width, a "),mt=n("code"),Es=o("margin"),ks=o(" of "),vt=n("code"),_s=o("50%"),Ss=o(" sends the image exactly halfway across the parent element. And since our parent element is already centered on the screen, that means "),yt=n("strong"),Ps=o("our image is now exactly halfway across the viewport, no matter how wide the viewport is!"),ba=u(),g=n("p"),xs=o("Now that our image\u2019s left side is directly in the center of the screen, the rest is just "),gt=n("em"),Cs=o("subtracting"),Is=u(),bt=n("code"),Os=o("50vw"),Ts=o(" from the left margin\u2014which is the other half of our calculation. Thus, "),Et=n("code"),As=o("calc(50% - 50vw)"),Ds=o(" gives us exactly the full-width image we\u2019re looking for!"),Ea=u(),Pe=n("p"),xe=n("img"),ka=u(),N=n("h3"),R=n("a"),kt=n("span"),Gs=o("Some Extra Notes About the Above Full-Width CSS"),_a=u(),Ce=n("p"),js=o("Once more, here\u2019s the CSS from above:"),Sa=u(),se=n("pre"),Pa=u(),x=n("p"),Ms=o("There\u2019s one small issue here, which is: we don\u2019t take into account the possibility that our "),_t=n("code"),Ws=o(".alignfull"),Hs=o(" element might already have a right margin. If it does, it will actually be taking up "),St=n("em"),Ns=o("more than"),Rs=o(" the full width of the screen, and that\u2019s no good."),xa=u(),q=n("p"),qs=o("Plus, we probably want space above and below our fullwidth image, just to make it stand out a little more. So really, instead of setting just a "),Pt=n("code"),Fs=o("margin-left"),zs=o(" property, we\u2019d most likely be better off setting all four sides at once:"),Ca=u(),ne=n("pre"),Ia=u(),Ie=n("p"),Ls=o("This way, we\u2019ve made sure all four sides of our image are accounted for while also giving the image a little breathing room."),Oa=u(),d=n("p"),Bs=o("And if you\u2019re wondering (or just wanting to get super technical): yes, this "),xt=n("em"),Ys=o("does"),Us=o(" mean that "),Ct=n("em"),Vs=o("both"),Js=o(" sides of the image get brought in by "),It=n("code"),Ks=o("50%"),Qs=o(", then are each pulled back out "),Ot=n("code"),Xs=o("50vw"),Zs=o(". If you didn\u2019t have the "),Tt=n("code"),$s=o("- 50vw"),en=o(" part of the CSS above, the image would effectively be 0% wide (since it would have a margin of "),At=n("code"),tn=o("50%"),an=o(" on both sides). Interesting! \u{1F913}"),Ta=u(),C=n("p"),on=o("Lastly, as you probably realized: "),Dt=n("strong"),sn=o("this post assumes the content container is already centered on the screen"),nn=o(". If your content is "),Gt=n("em"),ln=o("not"),rn=o(" already centered in the viewport, this specific CSS won\u2019t work for you, and you\u2019ll need to do something a little more creative to get your images full-width."),Aa=u(),F=n("h2"),z=n("a"),jt=n("span"),pn=o("Front-End CSS for Wide-Width Images"),Da=u(),L=n("p"),un=o("Wide-width images work similarly to the above, but naturally, we don\u2019t want to make them the "),Mt=n("em"),hn=o("full"),cn=o(" width of the screen; otherwise, there would be no difference between wide-width and full-width (and that, of course, would just be silly)."),Ga=u(),Oe=n("p"),dn=o("How wide the image should be, exactly, as well as how to achieve the effect, is ultimately up to the theme author. However, I find something like this bit of CSS works quite well:"),ja=u(),ie=n("pre"),Ma=u(),Te=n("p"),Ae=n("img"),Wa=u(),De=n("p"),fn=o("Our wide width image spans the 100% of its parent container, plus an extra 20 viewport width units."),Ha=u(),I=n("p"),wn=o("You might notice that in this case, I chose "),Wt=n("em"),mn=o("not"),vn=o(" to use negative margin, and instead, opted for a negative value on the "),Ht=n("code"),yn=o("left"),gn=o(" property (paired with relative positioning). Why\u2019s that, and what\u2019s the difference?"),Na=u(),le=n("p"),bn=o("For the \u201Cwhy,\u201D it\u2019s mainly because: I wanted to illustrate that "),Nt=n("strong"),En=o("there\u2019s more than one technique available here."),Ra=u(),Ge=n("p"),kn=o("As for the difference\u2026well, to be honest, which works better will probably depend on your use case, and the environment you\u2019re working in. None of this CSS exists in a vacuum (hopefully)."),qa=u(),je=n("p"),_n=o("If your images already have a side margin, then overriding that with a negative margin will probably work better (or, alternatively, you could just be aware that you may need to remove the side margin if you\u2019re utilizing relative positioning)."),Fa=u(),Me=n("p"),Sn=o("There are undoubtedly posts written on the advantages and disadvantages of both techniques, and I don\u2019t feel the need to retread that ground here. Some developers avoid negative margins like the plague; I think they\u2019re fine in a situation like this, and as long as you\u2019re not just using them to avoid changing a different part of the CSS, or as a hacky way to get around something that should just be fixed on its own."),za=u(),B=n("p"),Pn=o("Another note here: unless you\u2019re ok with your wide-width images bleeding off the page at smaller screen sizes, you\u2019ll need to either use a media query, and/or replace the "),Rt=n("code"),xn=o("10vw"),Cn=o(" with a value that doesn\u2019t exceed the side padding/margin around your main content container."),La=u(),b=n("p"),In=o("(For example: if your main content container element, whatever that may be, has a padding or margin of "),qt=n("code"),On=o("32px"),Tn=o(" on each side, you\u2019d want to make sure your "),Ft=n("code"),An=o(".alignwide"),Dn=o(" class had a width of no greater than "),zt=n("code"),Gn=o("calc(100% + 64px)"),jn=o(")."),Ba=u(),Y=n("p"),Mn=o("I eventually landed on something like this for my personal use on wide-width images; they\u2019re fullscreen up to a certain screen size (since they may as well be on mobile), then differentiate themselves starting at a certain "),Lt=n("code"),Wn=o("@media"),Hn=o(" breakpoint (likely the same one, or just above, where your content container element stops expanding and centers itself at a static width instead):"),Ya=u(),re=n("pre"),Ua=u(),pe=n("p"),Bt=n("strong"),Nn=o("That\u2019s it!"),Rn=o(" I hope this was helpful in getting your theme\u2019s images set up for Gutenberg support. Enjoy your new content editing experience!"),this.h()},l(e){k=i(e,"P",{});var r=l(k);eo=s(r,"Recently, I\u2019ve been using (and loving) the new "),Q=i(r,"A",{href:!0,rel:!0});var ai=l(Q);to=s(ai,"Gutenberg editor"),ai.forEach(t),ao=s(r," in WordPress 5.0+. It\u2019s a huge step forward in both what developers can offer, and what users can expect out of their content creation experience."),r.forEach(t),Yt=h(e),he=i(e,"P",{});var oi=l(he);oo=s(oi,"One of the new features of Gutenberg that I particularly enjoy is the ability to set an image as either \u201Cwide width\u201D or \u201Cfull width,\u201D to allow it to break out of its container element in order to span a greater width of the screen."),oi.forEach(t),Ut=h(e),ce=i(e,"P",{});var si=l(ce);so=s(si,"Here\u2019s a visual example of what I mean:"),si.forEach(t),Vt=h(e),de=i(e,"P",{});var ni=l(de);fe=i(ni,"IMG",{src:!0,alt:!0}),ni.forEach(t),Jt=h(e),X=i(e,"P",{});var qn=l(X);Le=i(qn,"STRONG",{});var ii=l(Le);no=s(ii,"Ordinarily, an image would be constrained to the content width"),ii.forEach(t),io=s(qn," (visualized by the dotted lines in the image above). Being able to allow images to break out of those confines is a powerful layout tool, though, as it allows content authors to add a great deal of visual interest and hierarchy to any page, post, or content supported by the new Gutenberg editor!"),qn.forEach(t),Kt=h(e),A=i(e,"H2",{id:!0});var Fn=l(A);D=i(Fn,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var li=l(D);Be=i(li,"SPAN",{class:!0}),l(Be).forEach(t),li.forEach(t),lo=s(Fn,"Adding Theme Support"),Fn.forEach(t),Qt=h(e),_=i(e,"P",{});var We=l(_);ro=s(We,"Adding support for wide- and full-width images is up to the theme developer. Fortunately, from the backend, it\u2019s dead simple; just add this line to the theme\u2019s "),Ye=i(We,"CODE",{});var ri=l(Ye);po=s(ri,"functions.php"),ri.forEach(t),uo=s(We," file (please be sure to use a "),Z=i(We,"A",{href:!0,rel:!0});var pi=l(Z);ho=s(pi,"child theme"),pi.forEach(t),co=s(We," as appropriate):"),We.forEach(t),Xt=h(e),$=i(e,"PRE",{class:!0});var Gl=l($);Gl.forEach(t),Zt=h(e),we=i(e,"P",{});var ui=l(we);fo=s(ui,"That tidy little snippet will make two new options available for image blocks in the Gutenberg editor, in addition to the usual options: \u201Cwide width\u201D and \u201Cfull width,\u201D highlighted in the image below:"),ui.forEach(t),$t=h(e),me=i(e,"P",{});var hi=l(me);ve=i(hi,"IMG",{src:!0,alt:!0}),hi.forEach(t),ea=h(e),f=i(e,"P",{});var O=l(f);wo=s(O,"When the user chooses either of these options, the "),Ue=i(O,"CODE",{});var ci=l(Ue);mo=s(ci,"<figure>"),ci.forEach(t),vo=s(O," element that appears on the front-end of the site (oh yeah\u2014by default, Gutenberg puts images inside "),Ve=i(O,"CODE",{});var di=l(Ve);yo=s(di,"<figure>"),di.forEach(t),go=s(O," elements, so that captions can be added easily. Anyway, that element, i.e., the image\u2019s container) will have either an "),Je=i(O,"CODE",{});var fi=l(Je);bo=s(fi,"alignwide"),fi.forEach(t),Eo=s(O," or "),Ke=i(O,"CODE",{});var wi=l(Ke);ko=s(wi,"alignfull"),wi.forEach(t),_o=s(O," class applied to it (depending, of course, on which was selected by the content author)."),O.forEach(t),ta=h(e),ee=i(e,"P",{});var zn=l(ee);Qe=i(zn,"STRONG",{});var mi=l(Qe);So=s(mi,"That\u2019s it for the PHP/back-end setup."),mi.forEach(t),Po=s(zn," Other than the snippet above, everything we\u2019ve covered so far is fully automatic and just handled by WordPress for us."),zn.forEach(t),aa=h(e),G=i(e,"P",{});var Va=l(G);xo=s(Va,"However, we still need to actually "),Xe=i(Va,"EM",{});var vi=l(Xe);Co=s(vi,"implement"),vi.forEach(t),Io=s(Va," these layout techniques on the front-end of the site, using our theme\u2019s CSS. Otherwise, nothing will happen visually when a content author chooses the full-width or wide-with image option."),Va.forEach(t),oa=h(e),j=i(e,"H2",{id:!0});var Ln=l(j);M=i(Ln,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var yi=l(M);Ze=i(yi,"SPAN",{class:!0}),l(Ze).forEach(t),yi.forEach(t),Oo=s(Ln,"Front-End CSS for Full-Width Images"),Ln.forEach(t),sa=h(e),ye=i(e,"P",{});var gi=l(ye);To=s(gi,"I wanted to write this post mainly to share one technique that I came across online, which I feel is particularly clever in this situation (and which is not at all exclusive to Gutenberg or WordPress):"),gi.forEach(t),na=h(e),te=i(e,"PRE",{class:!0});var jl=l(te);jl.forEach(t),ia=h(e),ge=i(e,"P",{});var bi=l(ge);Ao=s(bi,"Even though that bit of CSS above is very brief (only two properties!), I still want to be sure we cover what it\u2019s doing, because it\u2019s a pretty elegant solution for our needs."),bi.forEach(t),la=h(e),w=i(e,"P",{});var T=l(w);Do=s(T,"The "),$e=i(T,"CODE",{});var Ei=l($e);Go=s(Ei,"width"),Ei.forEach(t),jo=s(T," property is pretty straightforward: a value of "),et=i(T,"CODE",{});var ki=l(et);Mo=s(ki,"100vw"),ki.forEach(t),Wo=s(T," ensures that the image is always exactly as wide as the viewport, no matter what size that might be. (Remember, "),tt=i(T,"CODE",{});var _i=l(tt);Ho=s(_i,"width: 100%"),_i.forEach(t),No=s(T," might not work here, because percentages are based on the width of the "),at=i(T,"EM",{});var Si=l(at);Ro=s(Si,"parent element"),Si.forEach(t),qo=s(T,", not the screen, and our image\u2019s parent element may or may not be as wide as the viewport.)"),T.forEach(t),ra=h(e),W=i(e,"P",{});var Ja=l(W);Fo=s(Ja,"However, making the image "),ot=i(Ja,"CODE",{});var Pi=l(ot);zo=s(Pi,"100vw"),Pi.forEach(t),Lo=s(Ja," wide on its own doesn\u2019t do us much good on its own, because it would overflow the screen, as shown in this image:"),Ja.forEach(t),pa=h(e),be=i(e,"P",{});var xi=l(be);Ee=i(xi,"IMG",{src:!0,alt:!0}),xi.forEach(t),ua=h(e),H=i(e,"P",{});var Ka=l(H);Bo=s(Ka,"That brings us to the "),st=i(Ka,"CODE",{});var Ci=l(st);Yo=s(Ci,"margin"),Ci.forEach(t),Uo=s(Ka," property, which is the clever part. This is where the real CSS magic happens:"),Ka.forEach(t),ha=h(e),ae=i(e,"PRE",{class:!0});var Ml=l(ae);Ml.forEach(t),ca=h(e),S=i(e,"P",{});var He=l(S);Vo=s(He,"In case you\u2019re new to the "),nt=i(He,"CODE",{});var Ii=l(nt);Jo=s(Ii,"calc"),Ii.forEach(t),Ko=s(He," function, in essence, it lets you do math to set CSS values. It\u2019s most commonly used in responsive design to, say, let your image take up a quarter of the available space, minus an 8px margin (which would be "),it=i(He,"CODE",{});var Oi=l(it);Qo=s(Oi,"width: calc(25% - 8px);"),Oi.forEach(t),Xo=s(He,")."),He.forEach(t),da=h(e),v=i(e,"P",{});var U=l(v);Zo=s(U,"But "),lt=i(U,"CODE",{});var Ti=l(lt);$o=s(Ti,"calc"),Ti.forEach(t),es=s(U," has many other uses, and can crunch numbers on any dynamic or static values, even between two different units of measurement (as in the previous example, to subtract "),rt=i(U,"EM",{});var Ai=l(rt);ts=s(Ai,"pixels"),Ai.forEach(t),as=s(U," from a "),pt=i(U,"EM",{});var Di=l(pt);os=s(Di,"percentage"),Di.forEach(t),ss=s(U,")."),U.forEach(t),fa=h(e),P=i(e,"P",{});var Ne=l(P);ns=s(Ne,"Back to our fullwidth image: in order to make the image the full width of the screen and position it properly, we want to set a "),ut=i(Ne,"EM",{});var Gi=l(ut);is=s(Gi,"negative margin."),Gi.forEach(t),ls=s(Ne," And as you\u2019ve probably guessed, we\u2019ll need "),ht=i(Ne,"CODE",{});var ji=l(ht);rs=s(ji,"calc"),ji.forEach(t),ps=s(Ne," to help us, because the distance between the side of our container and the left edge of the screen is responsive, and always changing."),Ne.forEach(t),wa=h(e),oe=i(e,"P",{});var Bn=l(oe);ct=i(Bn,"STRONG",{});var Mi=l(ct);us=s(Mi,"So how do we determine how far the image needs to shift to the left?"),Mi.forEach(t),hs=s(Bn," Answer: we don\u2019t. \u{1F60E}"),Bn.forEach(t),ma=h(e),y=i(e,"P",{});var V=l(y);cs=s(V,"Instead, we\u2019re going to send our image "),dt=i(V,"EM",{});var Wi=l(dt);ds=s(Wi,"halfway to the right."),Wi.forEach(t),fs=s(V," That\u2019s the "),ft=i(V,"CODE",{});var Hi=l(ft);ws=s(Hi,"50%"),Hi.forEach(t),ms=s(V," portion of our "),wt=i(V,"CODE",{});var Ni=l(wt);vs=s(Ni,"calc"),Ni.forEach(t),ys=s(V," formula:"),V.forEach(t),va=h(e),ke=i(e,"P",{});var Ri=l(ke);_e=i(Ri,"IMG",{src:!0,alt:!0}),Ri.forEach(t),ya=h(e),Se=i(e,"P",{});var qi=l(Se);gs=s(qi,"Now we can begin to see the full picture (no pun intended)!"),qi.forEach(t),ga=h(e),E=i(e,"P",{});var ue=l(E);bs=s(ue,"Since percentage values are calculated based on the parent element\u2019s width, a "),mt=i(ue,"CODE",{});var Fi=l(mt);Es=s(Fi,"margin"),Fi.forEach(t),ks=s(ue," of "),vt=i(ue,"CODE",{});var zi=l(vt);_s=s(zi,"50%"),zi.forEach(t),Ss=s(ue," sends the image exactly halfway across the parent element. And since our parent element is already centered on the screen, that means "),yt=i(ue,"STRONG",{});var Li=l(yt);Ps=s(Li,"our image is now exactly halfway across the viewport, no matter how wide the viewport is!"),Li.forEach(t),ue.forEach(t),ba=h(e),g=i(e,"P",{});var J=l(g);xs=s(J,"Now that our image\u2019s left side is directly in the center of the screen, the rest is just "),gt=i(J,"EM",{});var Bi=l(gt);Cs=s(Bi,"subtracting"),Bi.forEach(t),Is=h(J),bt=i(J,"CODE",{});var Yi=l(bt);Os=s(Yi,"50vw"),Yi.forEach(t),Ts=s(J," from the left margin\u2014which is the other half of our calculation. Thus, "),Et=i(J,"CODE",{});var Ui=l(Et);As=s(Ui,"calc(50% - 50vw)"),Ui.forEach(t),Ds=s(J," gives us exactly the full-width image we\u2019re looking for!"),J.forEach(t),Ea=h(e),Pe=i(e,"P",{});var Vi=l(Pe);xe=i(Vi,"IMG",{src:!0,alt:!0}),Vi.forEach(t),ka=h(e),N=i(e,"H3",{id:!0});var Yn=l(N);R=i(Yn,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ji=l(R);kt=i(Ji,"SPAN",{class:!0}),l(kt).forEach(t),Ji.forEach(t),Gs=s(Yn,"Some Extra Notes About the Above Full-Width CSS"),Yn.forEach(t),_a=h(e),Ce=i(e,"P",{});var Ki=l(Ce);js=s(Ki,"Once more, here\u2019s the CSS from above:"),Ki.forEach(t),Sa=h(e),se=i(e,"PRE",{class:!0});var Wl=l(se);Wl.forEach(t),Pa=h(e),x=i(e,"P",{});var Re=l(x);Ms=s(Re,"There\u2019s one small issue here, which is: we don\u2019t take into account the possibility that our "),_t=i(Re,"CODE",{});var Qi=l(_t);Ws=s(Qi,".alignfull"),Qi.forEach(t),Hs=s(Re," element might already have a right margin. If it does, it will actually be taking up "),St=i(Re,"EM",{});var Xi=l(St);Ns=s(Xi,"more than"),Xi.forEach(t),Rs=s(Re," the full width of the screen, and that\u2019s no good."),Re.forEach(t),xa=h(e),q=i(e,"P",{});var Qa=l(q);qs=s(Qa,"Plus, we probably want space above and below our fullwidth image, just to make it stand out a little more. So really, instead of setting just a "),Pt=i(Qa,"CODE",{});var Zi=l(Pt);Fs=s(Zi,"margin-left"),Zi.forEach(t),zs=s(Qa," property, we\u2019d most likely be better off setting all four sides at once:"),Qa.forEach(t),Ca=h(e),ne=i(e,"PRE",{class:!0});var Hl=l(ne);Hl.forEach(t),Ia=h(e),Ie=i(e,"P",{});var $i=l(Ie);Ls=s($i,"This way, we\u2019ve made sure all four sides of our image are accounted for while also giving the image a little breathing room."),$i.forEach(t),Oa=h(e),d=i(e,"P",{});var m=l(d);Bs=s(m,"And if you\u2019re wondering (or just wanting to get super technical): yes, this "),xt=i(m,"EM",{});var el=l(xt);Ys=s(el,"does"),el.forEach(t),Us=s(m," mean that "),Ct=i(m,"EM",{});var tl=l(Ct);Vs=s(tl,"both"),tl.forEach(t),Js=s(m," sides of the image get brought in by "),It=i(m,"CODE",{});var al=l(It);Ks=s(al,"50%"),al.forEach(t),Qs=s(m,", then are each pulled back out "),Ot=i(m,"CODE",{});var ol=l(Ot);Xs=s(ol,"50vw"),ol.forEach(t),Zs=s(m,". If you didn\u2019t have the "),Tt=i(m,"CODE",{});var sl=l(Tt);$s=s(sl,"- 50vw"),sl.forEach(t),en=s(m," part of the CSS above, the image would effectively be 0% wide (since it would have a margin of "),At=i(m,"CODE",{});var nl=l(At);tn=s(nl,"50%"),nl.forEach(t),an=s(m," on both sides). Interesting! \u{1F913}"),m.forEach(t),Ta=h(e),C=i(e,"P",{});var qe=l(C);on=s(qe,"Lastly, as you probably realized: "),Dt=i(qe,"STRONG",{});var il=l(Dt);sn=s(il,"this post assumes the content container is already centered on the screen"),il.forEach(t),nn=s(qe,". If your content is "),Gt=i(qe,"EM",{});var ll=l(Gt);ln=s(ll,"not"),ll.forEach(t),rn=s(qe," already centered in the viewport, this specific CSS won\u2019t work for you, and you\u2019ll need to do something a little more creative to get your images full-width."),qe.forEach(t),Aa=h(e),F=i(e,"H2",{id:!0});var Un=l(F);z=i(Un,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var rl=l(z);jt=i(rl,"SPAN",{class:!0}),l(jt).forEach(t),rl.forEach(t),pn=s(Un,"Front-End CSS for Wide-Width Images"),Un.forEach(t),Da=h(e),L=i(e,"P",{});var Xa=l(L);un=s(Xa,"Wide-width images work similarly to the above, but naturally, we don\u2019t want to make them the "),Mt=i(Xa,"EM",{});var pl=l(Mt);hn=s(pl,"full"),pl.forEach(t),cn=s(Xa," width of the screen; otherwise, there would be no difference between wide-width and full-width (and that, of course, would just be silly)."),Xa.forEach(t),Ga=h(e),Oe=i(e,"P",{});var ul=l(Oe);dn=s(ul,"How wide the image should be, exactly, as well as how to achieve the effect, is ultimately up to the theme author. However, I find something like this bit of CSS works quite well:"),ul.forEach(t),ja=h(e),ie=i(e,"PRE",{class:!0});var Nl=l(ie);Nl.forEach(t),Ma=h(e),Te=i(e,"P",{});var hl=l(Te);Ae=i(hl,"IMG",{src:!0,alt:!0}),hl.forEach(t),Wa=h(e),De=i(e,"P",{});var cl=l(De);fn=s(cl,"Our wide width image spans the 100% of its parent container, plus an extra 20 viewport width units."),cl.forEach(t),Ha=h(e),I=i(e,"P",{});var Fe=l(I);wn=s(Fe,"You might notice that in this case, I chose "),Wt=i(Fe,"EM",{});var dl=l(Wt);mn=s(dl,"not"),dl.forEach(t),vn=s(Fe," to use negative margin, and instead, opted for a negative value on the "),Ht=i(Fe,"CODE",{});var fl=l(Ht);yn=s(fl,"left"),fl.forEach(t),gn=s(Fe," property (paired with relative positioning). Why\u2019s that, and what\u2019s the difference?"),Fe.forEach(t),Na=h(e),le=i(e,"P",{});var Vn=l(le);bn=s(Vn,"For the \u201Cwhy,\u201D it\u2019s mainly because: I wanted to illustrate that "),Nt=i(Vn,"STRONG",{});var wl=l(Nt);En=s(wl,"there\u2019s more than one technique available here."),wl.forEach(t),Vn.forEach(t),Ra=h(e),Ge=i(e,"P",{});var ml=l(Ge);kn=s(ml,"As for the difference\u2026well, to be honest, which works better will probably depend on your use case, and the environment you\u2019re working in. None of this CSS exists in a vacuum (hopefully)."),ml.forEach(t),qa=h(e),je=i(e,"P",{});var vl=l(je);_n=s(vl,"If your images already have a side margin, then overriding that with a negative margin will probably work better (or, alternatively, you could just be aware that you may need to remove the side margin if you\u2019re utilizing relative positioning)."),vl.forEach(t),Fa=h(e),Me=i(e,"P",{});var yl=l(Me);Sn=s(yl,"There are undoubtedly posts written on the advantages and disadvantages of both techniques, and I don\u2019t feel the need to retread that ground here. Some developers avoid negative margins like the plague; I think they\u2019re fine in a situation like this, and as long as you\u2019re not just using them to avoid changing a different part of the CSS, or as a hacky way to get around something that should just be fixed on its own."),yl.forEach(t),za=h(e),B=i(e,"P",{});var Za=l(B);Pn=s(Za,"Another note here: unless you\u2019re ok with your wide-width images bleeding off the page at smaller screen sizes, you\u2019ll need to either use a media query, and/or replace the "),Rt=i(Za,"CODE",{});var gl=l(Rt);xn=s(gl,"10vw"),gl.forEach(t),Cn=s(Za," with a value that doesn\u2019t exceed the side padding/margin around your main content container."),Za.forEach(t),La=h(e),b=i(e,"P",{});var K=l(b);In=s(K,"(For example: if your main content container element, whatever that may be, has a padding or margin of "),qt=i(K,"CODE",{});var bl=l(qt);On=s(bl,"32px"),bl.forEach(t),Tn=s(K," on each side, you\u2019d want to make sure your "),Ft=i(K,"CODE",{});var El=l(Ft);An=s(El,".alignwide"),El.forEach(t),Dn=s(K," class had a width of no greater than "),zt=i(K,"CODE",{});var kl=l(zt);Gn=s(kl,"calc(100% + 64px)"),kl.forEach(t),jn=s(K,")."),K.forEach(t),Ba=h(e),Y=i(e,"P",{});var $a=l(Y);Mn=s($a,"I eventually landed on something like this for my personal use on wide-width images; they\u2019re fullscreen up to a certain screen size (since they may as well be on mobile), then differentiate themselves starting at a certain "),Lt=i($a,"CODE",{});var _l=l(Lt);Wn=s(_l,"@media"),_l.forEach(t),Hn=s($a," breakpoint (likely the same one, or just above, where your content container element stops expanding and centers itself at a static width instead):"),$a.forEach(t),Ya=h(e),re=i(e,"PRE",{class:!0});var Rl=l(re);Rl.forEach(t),Ua=h(e),pe=i(e,"P",{});var Jn=l(pe);Bt=i(Jn,"STRONG",{});var Sl=l(Bt);Nn=s(Sl,"That\u2019s it!"),Sl.forEach(t),Rn=s(Jn," I hope this was helpful in getting your theme\u2019s images set up for Gutenberg support. Enjoy your new content editing experience!"),Jn.forEach(t),this.h()},h(){c(Q,"href","https://wordpress.org/gutenberg/"),c(Q,"rel","nofollow"),ze(fe.src,Qn="/images/post_images/Untitled-1024x928.png")||c(fe,"src",Qn),c(fe,"alt","Most of the content is constrained to a fixed-width container, but wide-width and full-width elements may expand outside that container's boundaries."),c(Be,"class","icon icon-link"),c(D,"aria-hidden","true"),c(D,"tabindex","-1"),c(D,"href","#adding-theme-support"),c(A,"id","adding-theme-support"),c(Z,"href","https://api.rickyjanuari.com/wordpress-child-theme-explanation/"),c(Z,"rel","nofollow"),c($,"class","language-php"),ze(ve.src,Xn="/images/post_images/gutenberg-image-toolbar-with-wide.png")||c(ve,"src",Xn),c(ve,"alt","'Wide width' and 'full width' options, highlighted, appear in the Gutenberg editor if the active theme supports them."),c(Ze,"class","icon icon-link"),c(M,"aria-hidden","true"),c(M,"tabindex","-1"),c(M,"href","#front-end-css-for-full-width-images"),c(j,"id","front-end-css-for-full-width-images"),c(te,"class","language-css"),ze(Ee.src,Zn="/images/post_images/fullwidth-overflow-1024x600.png")||c(Ee,"src",Zn),c(Ee,"alt","Setting the width is only part of the solution, since it will overflow the screen unless it's repositioned."),c(ae,"class","language-css"),ze(_e.src,$n="/images/post_images/fullwidth-left.png")||c(_e,"src",$n),c(_e,"alt","Setting a side margin of 50% on the element puts its left side directly in the center of its parent element."),ze(xe.src,ei="/images/post_images/fullwidth-achieved.png")||c(xe,"src",ei),c(xe,"alt","A left margin of 50% - 50vw gives us the perfectly centered, fullwidth element we're looking for."),c(kt,"class","icon icon-link"),c(R,"aria-hidden","true"),c(R,"tabindex","-1"),c(R,"href","#some-extra-notes-about-the-above-full-width-css"),c(N,"id","some-extra-notes-about-the-above-full-width-css"),c(se,"class","language-css"),c(ne,"class","language-css"),c(jt,"class","icon icon-link"),c(z,"aria-hidden","true"),c(z,"tabindex","-1"),c(z,"href","#front-end-css-for-wide-width-images"),c(F,"id","front-end-css-for-wide-width-images"),c(ie,"class","language-css"),ze(Ae.src,ti="/images/post_images/wide-width-only-1024x713.png")||c(Ae,"src",ti),c(Ae,"alt","A wide-width element, breaking outside its content container by an additional 20 VW"),c(re,"class","language-css")},m(e,r){p(e,k,r),a(k,eo),a(k,Q),a(Q,to),a(k,ao),p(e,Yt,r),p(e,he,r),a(he,oo),p(e,Ut,r),p(e,ce,r),a(ce,so),p(e,Vt,r),p(e,de,r),a(de,fe),p(e,Jt,r),p(e,X,r),a(X,Le),a(Le,no),a(X,io),p(e,Kt,r),p(e,A,r),a(A,D),a(D,Be),a(A,lo),p(e,Qt,r),p(e,_,r),a(_,ro),a(_,Ye),a(Ye,po),a(_,uo),a(_,Z),a(Z,ho),a(_,co),p(e,Xt,r),p(e,$,r),$.innerHTML=xl,p(e,Zt,r),p(e,we,r),a(we,fo),p(e,$t,r),p(e,me,r),a(me,ve),p(e,ea,r),p(e,f,r),a(f,wo),a(f,Ue),a(Ue,mo),a(f,vo),a(f,Ve),a(Ve,yo),a(f,go),a(f,Je),a(Je,bo),a(f,Eo),a(f,Ke),a(Ke,ko),a(f,_o),p(e,ta,r),p(e,ee,r),a(ee,Qe),a(Qe,So),a(ee,Po),p(e,aa,r),p(e,G,r),a(G,xo),a(G,Xe),a(Xe,Co),a(G,Io),p(e,oa,r),p(e,j,r),a(j,M),a(M,Ze),a(j,Oo),p(e,sa,r),p(e,ye,r),a(ye,To),p(e,na,r),p(e,te,r),te.innerHTML=Cl,p(e,ia,r),p(e,ge,r),a(ge,Ao),p(e,la,r),p(e,w,r),a(w,Do),a(w,$e),a($e,Go),a(w,jo),a(w,et),a(et,Mo),a(w,Wo),a(w,tt),a(tt,Ho),a(w,No),a(w,at),a(at,Ro),a(w,qo),p(e,ra,r),p(e,W,r),a(W,Fo),a(W,ot),a(ot,zo),a(W,Lo),p(e,pa,r),p(e,be,r),a(be,Ee),p(e,ua,r),p(e,H,r),a(H,Bo),a(H,st),a(st,Yo),a(H,Uo),p(e,ha,r),p(e,ae,r),ae.innerHTML=Il,p(e,ca,r),p(e,S,r),a(S,Vo),a(S,nt),a(nt,Jo),a(S,Ko),a(S,it),a(it,Qo),a(S,Xo),p(e,da,r),p(e,v,r),a(v,Zo),a(v,lt),a(lt,$o),a(v,es),a(v,rt),a(rt,ts),a(v,as),a(v,pt),a(pt,os),a(v,ss),p(e,fa,r),p(e,P,r),a(P,ns),a(P,ut),a(ut,is),a(P,ls),a(P,ht),a(ht,rs),a(P,ps),p(e,wa,r),p(e,oe,r),a(oe,ct),a(ct,us),a(oe,hs),p(e,ma,r),p(e,y,r),a(y,cs),a(y,dt),a(dt,ds),a(y,fs),a(y,ft),a(ft,ws),a(y,ms),a(y,wt),a(wt,vs),a(y,ys),p(e,va,r),p(e,ke,r),a(ke,_e),p(e,ya,r),p(e,Se,r),a(Se,gs),p(e,ga,r),p(e,E,r),a(E,bs),a(E,mt),a(mt,Es),a(E,ks),a(E,vt),a(vt,_s),a(E,Ss),a(E,yt),a(yt,Ps),p(e,ba,r),p(e,g,r),a(g,xs),a(g,gt),a(gt,Cs),a(g,Is),a(g,bt),a(bt,Os),a(g,Ts),a(g,Et),a(Et,As),a(g,Ds),p(e,Ea,r),p(e,Pe,r),a(Pe,xe),p(e,ka,r),p(e,N,r),a(N,R),a(R,kt),a(N,Gs),p(e,_a,r),p(e,Ce,r),a(Ce,js),p(e,Sa,r),p(e,se,r),se.innerHTML=Ol,p(e,Pa,r),p(e,x,r),a(x,Ms),a(x,_t),a(_t,Ws),a(x,Hs),a(x,St),a(St,Ns),a(x,Rs),p(e,xa,r),p(e,q,r),a(q,qs),a(q,Pt),a(Pt,Fs),a(q,zs),p(e,Ca,r),p(e,ne,r),ne.innerHTML=Tl,p(e,Ia,r),p(e,Ie,r),a(Ie,Ls),p(e,Oa,r),p(e,d,r),a(d,Bs),a(d,xt),a(xt,Ys),a(d,Us),a(d,Ct),a(Ct,Vs),a(d,Js),a(d,It),a(It,Ks),a(d,Qs),a(d,Ot),a(Ot,Xs),a(d,Zs),a(d,Tt),a(Tt,$s),a(d,en),a(d,At),a(At,tn),a(d,an),p(e,Ta,r),p(e,C,r),a(C,on),a(C,Dt),a(Dt,sn),a(C,nn),a(C,Gt),a(Gt,ln),a(C,rn),p(e,Aa,r),p(e,F,r),a(F,z),a(z,jt),a(F,pn),p(e,Da,r),p(e,L,r),a(L,un),a(L,Mt),a(Mt,hn),a(L,cn),p(e,Ga,r),p(e,Oe,r),a(Oe,dn),p(e,ja,r),p(e,ie,r),ie.innerHTML=Al,p(e,Ma,r),p(e,Te,r),a(Te,Ae),p(e,Wa,r),p(e,De,r),a(De,fn),p(e,Ha,r),p(e,I,r),a(I,wn),a(I,Wt),a(Wt,mn),a(I,vn),a(I,Ht),a(Ht,yn),a(I,gn),p(e,Na,r),p(e,le,r),a(le,bn),a(le,Nt),a(Nt,En),p(e,Ra,r),p(e,Ge,r),a(Ge,kn),p(e,qa,r),p(e,je,r),a(je,_n),p(e,Fa,r),p(e,Me,r),a(Me,Sn),p(e,za,r),p(e,B,r),a(B,Pn),a(B,Rt),a(Rt,xn),a(B,Cn),p(e,La,r),p(e,b,r),a(b,In),a(b,qt),a(qt,On),a(b,Tn),a(b,Ft),a(Ft,An),a(b,Dn),a(b,zt),a(zt,Gn),a(b,jn),p(e,Ba,r),p(e,Y,r),a(Y,Mn),a(Y,Lt),a(Lt,Wn),a(Y,Hn),p(e,Ya,r),p(e,re,r),re.innerHTML=Dl,p(e,Ua,r),p(e,pe,r),a(pe,Bt),a(Bt,Nn),a(pe,Rn)},p:Kn,i:Kn,o:Kn,d(e){e&&t(k),e&&t(Yt),e&&t(he),e&&t(Ut),e&&t(ce),e&&t(Vt),e&&t(de),e&&t(Jt),e&&t(X),e&&t(Kt),e&&t(A),e&&t(Qt),e&&t(_),e&&t(Xt),e&&t($),e&&t(Zt),e&&t(we),e&&t($t),e&&t(me),e&&t(ea),e&&t(f),e&&t(ta),e&&t(ee),e&&t(aa),e&&t(G),e&&t(oa),e&&t(j),e&&t(sa),e&&t(ye),e&&t(na),e&&t(te),e&&t(ia),e&&t(ge),e&&t(la),e&&t(w),e&&t(ra),e&&t(W),e&&t(pa),e&&t(be),e&&t(ua),e&&t(H),e&&t(ha),e&&t(ae),e&&t(ca),e&&t(S),e&&t(da),e&&t(v),e&&t(fa),e&&t(P),e&&t(wa),e&&t(oe),e&&t(ma),e&&t(y),e&&t(va),e&&t(ke),e&&t(ya),e&&t(Se),e&&t(ga),e&&t(E),e&&t(ba),e&&t(g),e&&t(Ea),e&&t(Pe),e&&t(ka),e&&t(N),e&&t(_a),e&&t(Ce),e&&t(Sa),e&&t(se),e&&t(Pa),e&&t(x),e&&t(xa),e&&t(q),e&&t(Ca),e&&t(ne),e&&t(Ia),e&&t(Ie),e&&t(Oa),e&&t(d),e&&t(Ta),e&&t(C),e&&t(Aa),e&&t(F),e&&t(Da),e&&t(L),e&&t(Ga),e&&t(Oe),e&&t(ja),e&&t(ie),e&&t(Ma),e&&t(Te),e&&t(Wa),e&&t(De),e&&t(Ha),e&&t(I),e&&t(Na),e&&t(le),e&&t(Ra),e&&t(Ge),e&&t(qa),e&&t(je),e&&t(Fa),e&&t(Me),e&&t(za),e&&t(B),e&&t(La),e&&t(b),e&&t(Ba),e&&t(Y),e&&t(Ya),e&&t(re),e&&t(Ua),e&&t(pe)}}}const Ul={title:"Adding Gutenberg Full- and Wide-Width Image Support to Your WordPress Theme",date:"2019-03-16",updated:"2020-05-13",categories:["css","web","wordpress"],coverImage:"gutenberg-wide-illustration.png",coverWidth:32,coverHeight:29,excerpt:"Gutenberg brings with it the ability to set image blocks as full-width or wide-width. This article talks about how to enable support for that feature in your theme, and one way to write the CSS that makes it work."};class Vl extends ql{constructor(k){super();Fl(this,k,null,Ll,zl,{})}}export{Vl as default,Ul as metadata};
